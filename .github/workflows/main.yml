name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  tests_win:
    needs: linter
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Create VERSION file
        run: echo "0.1.0" > src/VERSION
      - name: Install Pip and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Run tests on Windows
        run: pytest -s -vvvv -l --tb=long tests

  tests_linux:
    needs: linter
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Create VERSION file
        run: echo "0.1.0" > src/VERSION
      - name: Install Pip and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
          pip install pytest coverage
      - name: Run tests on Linux
        run: |
          .venv/bin/pytest -s -vvvv -l --tb=long tests/
          .venv/bin/coverage xml
          .venv/bin/coverage html

  tests_mac:
    needs: linter
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Create VERSION file
        run: echo "0.1.0" > src/VERSION
      - name: Install Pip and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
          pip install pytest coverage
      - name: Run tests on MacOS
        run: |
          .venv/bin/pytest -s -vvvv -l --tb=long tests/
          .venv/bin/coverage xml
          .venv/bin/coverage html
