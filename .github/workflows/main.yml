name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  linter:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Create VERSION file
        run: echo "0.1.0" > src/VERSION
      - name: Create virtual environment
        run: python -m venv .venv
      - name: Activate virtual environment
        shell: bash
        run: source .venv/bin/activate
      - name: Install project
        run: make install
      - name: Install linting tools
        run: |
          source .venv/bin/activate
          pip install flake8 black mypy
      - name: Run linter
        run: |
          source .venv/bin/activate
          make lint

  tests_linux:
    needs: linter
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Create VERSION file
        run: echo "0.1.0" > src/VERSION
      - name: Create virtual environment
        run: python -m venv .venv
      - name: Activate virtual environment
        shell: bash
        run: source .venv/bin/activate
      - name: Install project
        run: make install
      - name: Run tests
        run: |
          source .venv/bin/activate
          make test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

  tests_mac:
    needs: linter
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Create VERSION file
        run: echo "0.1.0" > src/VERSION
      - name: Create virtual environment
        run: python -m venv .venv
      - name: Activate virtual environment
        shell: bash
        run: source .venv/bin/activate
      - name: Install project
        run: make install
      - name: Run tests
        run: |
          source .venv/bin/activate
          make test

  tests_win:
    needs: linter
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Create VERSION file
        run: echo "0.1.0" > src/VERSION
      - name: Install Pip and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Run tests
        run: python -m pytest -s -vvvv -l --tb=long tests
